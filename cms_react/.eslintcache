[{"E:\\dev\\Web\\cms\\cms_react\\src\\index.js":"1","E:\\dev\\Web\\cms\\cms_react\\src\\reducers\\index.js":"2","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\Login\\Login.jsx":"3","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Navbar.jsx":"4","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Admins.jsx":"5","E:\\dev\\Web\\cms\\cms_react\\src\\global\\Idgenerator.jsx":"6","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\AddRole.jsx":"7","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\Pagination.jsx":"8","E:\\dev\\Web\\cms\\cms_react\\src\\actions\\profile.jsx":"9","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\Logout.jsx":"10","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Authorization.jsx":"11","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\HOC\\Modal.jsx":"12","E:\\dev\\Web\\cms\\cms_react\\src\\global\\helpers.jsx":"13","E:\\dev\\Web\\cms\\cms_react\\src\\global\\paginate.jsx":"14","E:\\dev\\Web\\cms\\cms_react\\src\\reducers\\profile.jsx":"15","E:\\dev\\Web\\cms\\cms_react\\src\\global\\cookie.js":"16","E:\\dev\\Web\\cms\\cms_react\\src\\global\\validator_rules.jsx":"17","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Person.jsx":"18","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Sidebar.jsx":"19","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Footer.jsx":"20","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\Table.jsx":"21","E:\\dev\\Web\\cms\\cms_react\\src\\services\\httpServices.js":"22","E:\\dev\\Web\\cms\\cms_react\\src\\store\\index.js":"23","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\AddPermission.jsx":"24","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\Main.jsx":"25","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\DeleteRole.jsx":"26","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\CreatePost.jsx":"27","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\FileManager.jsx":"28","E:\\dev\\Web\\cms\\cms_react\\src\\services\\FileManager.jsx":"29","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\UploadFile.jsx":"30","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\FileDetails.jsx":"31","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Category.jsx":"32","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Category.jsx":"33","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Post.jsx":"34","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\ContentWrapper.jsx":"35","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\RolePermissions.jsx":"36","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Dashboard.jsx":"37","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\ContentAndSidebar.jsx":"38","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\RelogIn.jsx":"39","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\PostList.jsx":"40","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\EditPost.jsx":"41","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\PermissionDenid.jsx":"42","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Key_Value.jsx":"43","E:\\dev\\Web\\cms\\cms_react\\src\\services\\IndexPage.jsx":"44","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\SiteIndex.jsx":"45"},{"size":527,"mtime":1608133086052,"results":"46","hashOfConfig":"47"},{"size":248,"mtime":1611311122886,"results":"48","hashOfConfig":"47"},{"size":5543,"mtime":1614369273095,"results":"49","hashOfConfig":"47"},{"size":12209,"mtime":1614704810333,"results":"50","hashOfConfig":"47"},{"size":16337,"mtime":1614683359988,"results":"51","hashOfConfig":"47"},{"size":185,"mtime":1608133086017,"results":"52","hashOfConfig":"47"},{"size":1251,"mtime":1608659818158,"results":"53","hashOfConfig":"47"},{"size":1214,"mtime":1608133086315,"results":"54","hashOfConfig":"47"},{"size":418,"mtime":1611311017466,"results":"55","hashOfConfig":"47"},{"size":1293,"mtime":1608133086412,"results":"56","hashOfConfig":"47"},{"size":479,"mtime":1608133086063,"results":"57","hashOfConfig":"47"},{"size":1790,"mtime":1611390195290,"results":"58","hashOfConfig":"47"},{"size":302,"mtime":1608133086049,"results":"59","hashOfConfig":"47"},{"size":244,"mtime":1608624871222,"results":"60","hashOfConfig":"47"},{"size":398,"mtime":1611311093334,"results":"61","hashOfConfig":"47"},{"size":1102,"mtime":1614678654067,"results":"62","hashOfConfig":"47"},{"size":702,"mtime":1608642303603,"results":"63","hashOfConfig":"47"},{"size":2334,"mtime":1614683395369,"results":"64","hashOfConfig":"47"},{"size":6644,"mtime":1614357689017,"results":"65","hashOfConfig":"47"},{"size":389,"mtime":1608133086587,"results":"66","hashOfConfig":"47"},{"size":2936,"mtime":1608802881685,"results":"67","hashOfConfig":"47"},{"size":1219,"mtime":1611424652531,"results":"68","hashOfConfig":"47"},{"size":446,"mtime":1614682004353,"results":"69","hashOfConfig":"47"},{"size":3039,"mtime":1608808087719,"results":"70","hashOfConfig":"47"},{"size":938,"mtime":1611393396436,"results":"71","hashOfConfig":"47"},{"size":2711,"mtime":1608807451879,"results":"72","hashOfConfig":"47"},{"size":10372,"mtime":1614441580959,"results":"73","hashOfConfig":"47"},{"size":13497,"mtime":1614715107787,"results":"74","hashOfConfig":"47"},{"size":1623,"mtime":1614700950333,"results":"75","hashOfConfig":"47"},{"size":580,"mtime":1610292600135,"results":"76","hashOfConfig":"47"},{"size":3769,"mtime":1614500542087,"results":"77","hashOfConfig":"47"},{"size":7759,"mtime":1614372231036,"results":"78","hashOfConfig":"47"},{"size":854,"mtime":1611173604161,"results":"79","hashOfConfig":"47"},{"size":883,"mtime":1611424986024,"results":"80","hashOfConfig":"47"},{"size":2337,"mtime":1614349876969,"results":"81","hashOfConfig":"47"},{"size":8678,"mtime":1611392614658,"results":"82","hashOfConfig":"47"},{"size":830,"mtime":1614358222606,"results":"83","hashOfConfig":"47"},{"size":1097,"mtime":1611393166172,"results":"84","hashOfConfig":"47"},{"size":384,"mtime":1611393251273,"results":"85","hashOfConfig":"47"},{"size":2987,"mtime":1611426448170,"results":"86","hashOfConfig":"47"},{"size":382,"mtime":1611426462301,"results":"87","hashOfConfig":"47"},{"size":623,"mtime":1611392287043,"results":"88","hashOfConfig":"47"},{"size":440,"mtime":1613041610431,"results":"89","hashOfConfig":"47"},{"size":1129,"mtime":1613062250059,"results":"90","hashOfConfig":"47"},{"size":14091,"mtime":1614441360079,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"kxzudp",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"E:\\dev\\Web\\cms\\cms_react\\src\\index.js",[],["205","206"],"E:\\dev\\Web\\cms\\cms_react\\src\\reducers\\index.js",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\Login\\Login.jsx",["207"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { getValidator, rules } from '../../../global/validator_rules';\nimport { getCookie, setCookie } from '../../../global/cookie';\nimport config from \"../../../config.json\";\nimport { LogIn } from \"../../../services/Authorization\";\nimport { useDispatch } from \"react-redux\";\nimport { setToken } from \"../../../actions/profile\";\nimport { withRouter } from \"react-router-dom\";\nimport './Login.css';\n\nconst Login = ({ history, relogin = false }) => {\n    const [username, Setusername] = useState(\"\");\n    const [password, Setpassword] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [forceUpdate, setForceUpdate] = useState(false);\n    const validator = useRef(getValidator);\n    const dispatch = useDispatch();\n\n\n    const handelSubmit = async (event) => {\n        event.preventDefault();\n        const obj = {\n            username,\n            password,\n        };\n        if (validator.current.allValid()) {\n            try {\n                const respons = await LogIn(obj);\n                if (respons.data.statusText === \"ok\") {\n                    setCookie(30, 'token', respons.data.token);\n                    await dispatch(setToken(respons.data.token));\n                    setTimeout(() => {\n                        document.getElementById('Modal_RelogIn_open').click();\n                    }, (30 * 60 * 1000));\n                    if (relogin) {\n                        document.getElementById('Modal_RelogIn_open').click();\n                    } else {\n                        history.replace(config.web_url);\n                    }\n                } else {\n                    setShow(true);\n                }\n            } catch (error) {\n            }\n        } else {\n            validator.current.showMessages();\n            setForceUpdate(!forceUpdate);\n        }\n    };\n\n    useEffect(() => {\n        if (getCookie('token') === null) {\n            history.replace(config.web_url + \"logIn\");\n        }\n    }, []);\n\n    return (\n        <div className={(relogin === false) ? \"container-fluid bg-gradient-primary\" : \"\"} style={(relogin === false) ? { height: \"100vh\" } : { height: \"100%\" }}>\n            <div className={(relogin === false) ? \"row h-100 align-items-center justify-content-center\" : \"\"}>\n                <div className={(relogin) ? \"col-12\" : \"col-xl-3 col-lg-4 col-md-4 col-sm-6\"} >\n                    <div className=\"card mb-4 py-3 border-bottom-danger\">\n                        <div className=\"card-body test\">\n                            <img className=\"img-fluid\" src={config.logo_url} alt=\"cant load\" style={{ borderRadius: \"50%\", padding: \"inherit\" }} />\n                            <form className=\"user\" onSubmit={handelSubmit} >\n                                <div className=\"form-group\">\n                                    <input className=\"form-control form-control-user\" placeholder=\"نام کاربری\"\n                                        value={username}\n                                        onChange={(e) => {\n                                            Setusername(e.target.value);\n                                            setShow(false);\n                                            validator.current.showMessageFor(\n                                                \"username\"\n                                            );\n                                        }}\n                                    />\n                                    {validator.current.message(\n                                        \"username\",\n                                        username,\n                                        rules('username')\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"password\" className=\"form-control form-control-user\" id=\"exampleInputPassword\"\n                                        placeholder=\"رمز عبور\"\n                                        value={password}\n                                        onChange={(e) => {\n                                            Setpassword(e.target.value);\n                                            setShow(false);\n                                            validator.current.showMessageFor(\n                                                \"password\"\n                                            );\n                                        }}\n                                    />\n                                    {validator.current.message(\n                                        \"password\",\n                                        password,\n                                        rules('password')\n                                    )}\n                                </div>\n                                {show &&\n                                <div className=\"alert alert-danger\" role=\"alert\" style={{ textAlign: \"center\" }}>\n                                    نام کاربری یا رمز عبور اشتباه است\n                                </div>\n                                }\n\n                                <button type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n                                    ورود\n                                    </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Login);\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Navbar.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Admins.jsx",["226"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { _Admins, _AdminRoles, _CreatePerson, _EditPerson } from \"../../services/Person\";\nimport Table from \"../components/Table.jsx\";\nimport useGenerator from \"../../global/Idgenerator\";\nimport { getValidator, rules } from '../../global/validator_rules';\nimport { toast } from 'react-toastify';\nimport { array_move } from '../../global/helpers';\nimport { useSelector } from 'react-redux';\nimport config from \"../../config.json\";\n\nconst Admins = () => {\n\n    const [admins, setAdmins] = useState(null);\n    const [adminRoles, setAdminRoles] = useState(null);\n    const [role_id, setRole_id] = useState(\"\");\n    const [file_id, setFile_id] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [oldUsername, setOldUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [family, setFamily] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [person_id, setPerson_id] = useState(\"\");\n    const [generateID] = useGenerator();\n    const [clearSelect, setclearSelect] = useState(generateID());\n    const [forceUpdate, setForceUpdate] = useState(false);\n    const [selecting, setSelecting] = useState(false);\n    const validator = useRef(getValidator);\n    const permission = useSelector(state => state.profile.permissions).includes('admins_page');\n\n    const columens = (row, generateID) => {\n        return (\n            <>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.family}</th>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.name}</th>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.role}</th>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.username}</th>\n            </>\n        );\n    }\n    const getAdmins = async () => {\n        try {\n            const respons = await _Admins();\n            if (respons.data.statusText === \"ok\") {\n                setAdmins(respons.data.list);\n            }\n        } catch (error) { }\n    }\n    const getAdminRoles = async () => {\n        try {\n            const respons = await _AdminRoles();\n            if (respons.data.statusText === \"ok\") {\n                setRole_id(respons.data.list[0].role_id)\n                setAdminRoles(respons.data.list);\n            }\n        } catch (error) { }\n    }\n\n    const resetInputs = (data) => {\n        validator.current.hideMessageFor();\n\n        if (data === null) {\n            setFile_id(\"\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setName(\"\");\n            setFamily(\"\");\n            setRole_id(\"\");\n            setDescription(\"\");\n            setSelecting(false);\n            setclearSelect(generateID());\n        } else {\n            setOldUsername(data.username);\n            setSelecting(true);\n            setFile_id(data.file_id);\n            setPerson_id(data.person_id);\n            setPassword(\"\");\n            setUsername(data.username);\n            setName(data.name);\n            setFamily(data.family);\n            setRole_id(data.role_id);\n            setDescription(data.description);\n            let index = adminRoles.findIndex(x => x.role_id === data.role_id);\n            let reOrder = array_move(adminRoles, index, 0);\n            setAdminRoles(reOrder);\n        }\n        setForceUpdate(!forceUpdate);\n    }\n    const handelSubmit = async (event) => {\n\n        event.preventDefault();\n        let data = {\n            username,\n            name,\n            family,\n            oldUsername,\n            description,\n            file_id,\n            person_id,\n            role_id,\n        };\n        if (password !== null && password !== \"\") {\n            data.password = password;\n        }\n        if (validator.current.allValid()) {\n            try {\n                console.log(data);\n                if (selecting) {\n                    const response = await _EditPerson(data);\n                    if (response.data.statusText === \"ok\") {\n                        resetInputs(null);\n                        getAdmins();\n                    }\n                    toast(response.data.message);\n                } else {\n                    const response = await _CreatePerson(data);\n                    if (response.data.statusText === \"ok\") {\n                        resetInputs(null);\n                        getAdmins();\n                    }\n                    toast(response.data.message);\n                }\n            } catch (error) {\n                toast(error.response.data.message);\n                console.log(error);\n            }\n        } else {\n            validator.current.showMessages();\n            setForceUpdate(!forceUpdate);\n        }\n    }\n\n    useEffect(() => {\n        getAdmins();\n        getAdminRoles();\n    }, []);\n\n    if (permission === false) {\n        return (\n            <div class=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n                <div>شما به این قسمت دسترسی ندارید</div>\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"container-fluid\">\n                    <form onSubmit={handelSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header\">\n                                        <h6 className=\"font-weight-bold text-primary\">تصویر حساب کاربری</h6>\n                                    </div>\n                                    <div className=\"card-body flex-column d-flex  align-items-center\" >\n                                        <input placeholder=\"ID عکس\" name=\"file_id\" id=\"file_id\" className=\"form-control form-control-user\" type=\"text\" value={file_id} onChange={(e) => setFile_id(e.target.value)} />\n                                        {\n                                            validator.current.message(\n                                                \"file_id\",\n                                                file_id,\n                                                \"required\"\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-xl-8 col-lg-8 col-md-12 col-sm-12\">\n                                <div className=\"card shadow\">\n                                    <div className=\"card-header\">\n                                        <h6 className=\"font-weight-bold text-primary\">مشخصات حساب کاربری</h6>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <div className=\"d-flex\">\n                                            <div className=\"flex-fill m-2\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"password\">رمز عبور</label>\n                                                    <input placeholder=\"رمز عبور\" name=\"password\" id=\"password\" className=\"form-control form-control-user\" type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                                                    {\n                                                        validator.current.message(\n                                                            \"password\",\n                                                            (selecting ? \"tempstring\" : password),\n                                                            rules('password')\n                                                        )\n                                                    }\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"family\">نام خانوادگی</label>\n                                                    <input name=\"family\" id=\"family\" value={family} onChange={\n                                                        (e) => {\n                                                            setFamily(e.target.value);\n                                                        }} className=\"form-control form-control-user\" placeholder=\"نام خانوادگی\" style={{ textAlign: \"right\" }} />\n                                                    {validator.current.message(\n                                                        \"family\",\n                                                        family,\n                                                        \"required\"\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"flex-fill m-2\" >\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"username\">نام کاربری</label>\n                                                    <input name=\"username\" id=\"username\" value={username} onChange={\n                                                        (e) => {\n                                                            setUsername(e.target.value);\n                                                        }} className=\"form-control form-control-user\" placeholder=\"نام کاربری\" />\n                                                    {validator.current.message(\n                                                        \"username\",\n                                                        username,\n                                                        rules('username')\n                                                    )}\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"name\">نام</label>\n                                                    <input name=\"name\" id=\"name\" value={name} onChange={\n                                                        (e) => {\n                                                            setName(e.target.value);\n                                                        }} className=\"form-control form-control-user\" placeholder=\"نام\" style={{ textAlign: \"right\" }} />\n                                                    {validator.current.message(\n                                                        \"name\",\n                                                        name,\n                                                        \"required\"\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"description\">توضیحات</label>\n                                            <textarea name=\"description\" id=\"description\" value={description} onChange={\n                                                (e) => {\n                                                    setDescription(e.target.value);\n                                                }} className=\"form-control form-control-user\" style={{ textAlign: \"right\" }} >\n                                            </textarea>\n                                            {validator.current.message(\n                                                \"description\",\n                                                description,\n                                                \"required\"\n                                            )}\n                                        </div>\n                                        <div className=\"d-flex  mb-2 mx-2\">\n                                            <div className=\"input-group\">\n                                                <select className=\"custom-select\" id=\"roleSelect\" onChange={(e) => setRole_id(e.target.value)}>\n                                                    {\n                                                        (adminRoles != null) ?\n                                                            adminRoles.map((row, index) =>\n                                                                <option value={row.role_id} key={generateID()}>{row.name}</option>\n                                                            )\n                                                            : null\n                                                    }\n                                                </select>\n                                                <div className=\"input-group-prepend\" >\n                                                    <label className=\"input-group-text\" htmlFor=\"roleSelect\">نقش</label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row mb-2 mx-2\">\n                                            <div className=\"col-6\">\n                                                <button type=\"submit\" className={(selecting) ? \"btn btn-success btn-user w-100\" : \"btn btn-primary btn-user w-100\"}>\n                                                    {(selecting) ? \"ذخیره تغییرات\" : \"ساخت حساب\"}\n                                                </button>\n                                            </div>\n                                            <div className=\"col-6\">\n                                                {(selecting) ? <button onClick={() => {\n                                                    setclearSelect(generateID());\n                                                    resetInputs(null);\n                                                }} className=\"btn btn-warning btn-user flex-fill  w-100\" type=\"button\">\n                                                    لغو انتخاب\n                                                  </button> : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                    <div className=\"row mt-2\">\n                        <div className=\"col-12\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">تصویر حساب کاربری</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    {(admins != null) ?\n                                        <Table titles={[\n                                            \"نام خانوادگی\",\n                                            \"نام\",\n                                            \"نقش\",\n                                            \"نام کاربری\"\n                                        ]} data={admins} select={true} clearSelect={clearSelect} selectLisener={(selectedData) => {\n                                            if (selectedData != null) {\n                                                resetInputs(selectedData);\n                                            }\n                                        }} columens={columens} />\n                                        : null}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nexport default Admins;\n",["227","228"],"E:\\dev\\Web\\cms\\cms_react\\src\\global\\Idgenerator.jsx",[],["229","230"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\AddRole.jsx",[],["231","232"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\Pagination.jsx",["233"],"import React from \"react\";\nimport {range} from \"lodash\";\nimport useGenerator from \"../../global/Idgenerator\";\nconst Pagination = ({ total ,perPage , onPageChange, currentPage}) => {\n    const [generateID] = useGenerator();\n    const pageCount = Math.ceil(total / perPage);\n    if (pageCount === 1) return null;\n    const pages = range(1, pageCount + 1);\n    return (\n        <nav aria-label=\"Page navigation\">\n            <ul className=\"pagination justify-content-center\">\n                {pages.map(page => (\n                    <li\n                        key={generateID()}\n                        className={\n                            page === currentPage\n                                ? \"page-item active\"\n                                : \"page-item\"\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\n\nexport default Pagination;\n",["234","235"],"E:\\dev\\Web\\cms\\cms_react\\src\\actions\\profile.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\Logout.jsx",[],["236","237"],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\Authorization.jsx",[],["238","239"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\HOC\\Modal.jsx",[],["240","241"],"E:\\dev\\Web\\cms\\cms_react\\src\\global\\helpers.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\global\\paginate.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\reducers\\profile.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\global\\cookie.js",["242"],"export const setCookie = (minutes,name,value) => {\n    if(minutes === 0){\n        document.cookie = name + \"=\" + value + \";\"\n    }else{\n        var d = new Date();\n        d.setTime(d.getTime() + (minutes * 60 * 1000));\n        var expires = \"expires=\" + d.toGMTString();\n        document.cookie = name + \"=\" + value + \";\" + expires + \"; secure\";\n    }\n}\n\nexport const getCookie = (name) => {\n    var name = name + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) === 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return null;\n}\n\nexport const checkCookie = () => {\n    var user = getCookie(\"username\");\n    if (user !== \"\") {\n        alert(\"Welcome again \" + user);\n    } else {\n        user = prompt(\"Please enter your name:\", \"\");\n        if (user !== \"\" && user != null) {\n            setCookie(\"username\", user, 30);\n        }\n    }\n}\n","E:\\dev\\Web\\cms\\cms_react\\src\\global\\validator_rules.jsx",["243","244","245"],"import React, { Fragment, useRef, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nexport const getValidator = new SimpleReactValidator({\n    messages: {\n        required: \"پرکردن این فیلد الزامی میباشد\",\n        min: \"کم تر از 5 کارکتر نباید باشد\",\n        max: \"بیشتر از 255 کارکتر نباید باشد\",\n        accepted : \"فایل انتخاب نشده است\"\n    },\n    element: (message) => <div style={{ color: \"red\" }}>{message}</div>,\n});\n\nexport const rules = (type) => {\n    return ({\n        'username' :\"required|min:5|max:255\" ,\n        'password' : \"required|min:5|max:255\"\n    }[type]);\n};\n","E:\\dev\\Web\\cms\\cms_react\\src\\services\\Person.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Sidebar.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\Footer.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\Table.jsx",["246","247","248"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport useGenerator from \"../../global/Idgenerator\";\nimport Pagination from \"../components/Pagination\";\nimport paginate from \"../../global/paginate\";\n\nconst Table = ({\n    titles,\n    data,\n    columens,\n    loadSomething = null,\n    perPage = 8,\n    select = false,\n    clearSelect = false,\n    selectLisener = null,\n    selectedValue = null,\n}) => {\n\n    const [generateID] = useGenerator();\n    const [acive, setActive] = useState(-1);\n    const [currentPage, setCurrentPage] = useState(1);\n    let pData = paginate(data, currentPage, perPage);\n\n\n    useEffect(() => {\n        setActive(-1);\n        if (select && pData != null && pData.length > 0) {\n            if (selectedValue != null) {\n                pData.map((row, index) => {\n                    if (row == selectedValue) {\n                        selectLisener(row);\n                        setActive(index);\n                    }\n                })\n            } else {\n                // selectLisener(pData[0]);\n            }\n        }\n    }, [selectedValue, clearSelect]);\n\n\n    const rowelemnt = (row, index) => {\n        if (select) {\n            return (\n\n                <tr key={generateID()} onClick={() => { setActive(index); (selectLisener != null) && selectLisener(row); }} className={(index === acive) ? \"table-primary\" : \"\"}>\n                    {columens(row, generateID, () => setActive(index))}\n                </tr>\n            );\n        } else {\n            return (\n                <tr key={generateID()}>\n                    {columens(row, generateID)}\n                </tr>\n            );\n        }\n\n    }\n\n    return (\n        <>\n            {\n                (pData != null && pData.length > 0) ?\n                    <div>\n                        <table className=\"table  table-striped table-bordered rtl text-center justify-content-center\">\n                            <thead>\n                                <tr key={generateID()}>\n                                    {titles.map((title) => <th key={generateID()} scope=\"col\" className=\"text-center\">{title}</th>)}\n                                </tr>\n                            </thead>\n                            <tbody>\n\n                                {pData.map((row, index) =>\n                                    rowelemnt(row, index)\n                                )}\n                            </tbody>\n                        </table>\n                        <Pagination total={data.length} perPage={perPage} onPageChange={(page) => {\n                            setCurrentPage(page);\n                            pData = (paginate(data, currentPage, perPage));\n                        }} currentPage={currentPage} />\n\n                        {(loadSomething != null) ? loadSomething(clearSelect) : null}\n\n                    </div >\n                    : null\n            }\n        </>\n    );\n\n}\nexport default Table;\n","E:\\dev\\Web\\cms\\cms_react\\src\\services\\httpServices.js",["249"],"import axios from \"axios\";\nimport { toast } from 'react-toastify';\n\n\nconst notify = (text) => toast(text);\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nconst token = localStorage.getItem(\"token\");\nif (token) axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\naxios.interceptors.response.use((response) => {\n    return response;\n}, (error) => {\n    if (error.response.data.meessage === \"token expired\" || error.response.data.meessage === \"token is wrong\") {\n        document.getElementById('Modal_RelogIn_open').click();\n        return Promise.reject(error);\n    }\n    if (error.response.data.meessage === \"permission denid\") {\n        document.getElementById('Modal_PermissionDenid_open').click();\n        return Promise.reject(error);\n    }\n    const expectedErrors =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n    if (!expectedErrors) {\n        notify(\"مشکلی در ارتباط با سرور پیش آمد دوباره تلاش کنید\");\n    }\n\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    axios: axios,\n};\n","E:\\dev\\Web\\cms\\cms_react\\src\\store\\index.js",["250"],"import { createStore, compose, applyMiddleware } from \"redux\";\nimport { reducers } from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\nimport { setToken } from \"../actions/profile\";\n\nexport const store = createStore(\n    reducers,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\n// store.subscribe(() => console.log(store.getState));\n\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\AddPermission.jsx",["251"],"import { useEffect, useState } from \"react\";\nimport Modal from \"../HOC/Modal\";\nimport { _AddPermission, _MissingPermissions } from './../../../services/Person';\nimport Table from './../Table';\nimport { toast } from 'react-toastify';\nimport useGenerator from \"../../../global/Idgenerator\";\n\nconst AddPermission = ({ selectedRole, update }) => {\n    const [generateID] = useGenerator();\n    const [permissions, setPermissions] = useState(null);\n    const [selectedPermission, setSelectedPermission] = useState(null);\n    const [clear, setClear] = useState(generateID());\n\n    const footer = () => {\n        return (\n            <div style={{ textAlign: \"center\", width: \"100%\" }}>\n                <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => addPermission(selectedPermission)} style={{ margin: \"5px\" }}>افزودن دسترسی</button>\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">لغو</button>\n            </div>\n        );\n    }\n    const addPermission = async (permission_id) => {\n        try {\n            const respons = await _AddPermission({ 'role_id': selectedRole, permission_id });\n            if (respons.data.statusText === \"ok\") {\n                getMissingPermissions(selectedRole);\n                setSelectedPermission(null);\n                setClear(generateID());\n                update();//TODO update injast\n                toast(respons.data.message);\n            }\n        } catch (error) { }\n    };\n\n\n    const getMissingPermissions = async (role_id) => {\n        try {\n            const respons = await _MissingPermissions({ role_id });\n            if (respons.data.statusText === \"ok\") {\n                setPermissions(respons.data.list);\n            }\n        } catch (error) { }\n    }\n    const columens = (row, generateID) => {\n        return (\n            <>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.permission_id}</th>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.name}</th>\n            </>\n        );\n    }\n\n    useEffect(() => {\n        setPermissions(null);\n        getMissingPermissions(selectedRole);\n        setClear(generateID());\n    }, [selectedRole , update]);//TODO ta update to azafe kardam  harvaght update seda bezanam update mishe !\n\n    return (\n        <>\n            <Modal obj_id=\"Modal_AddPermission\" close={false} footer={footer()} title=\"افزودن دسترسی\">\n\n                {(permissions != null) ?\n                    <Table titles={[\n                        \"id\",\n                        \"نام\",\n                    ]} data={permissions} select={true} clearSelect={clear} selectLisener={(selectedData) => {\n                        if (selectedData != null) {\n                            setSelectedPermission(selectedData.permission_id);\n                        }\n                    }} columens={columens} />\n                    : null}\n            </Modal>\n        </>\n\n    );\n};\n\nexport default AddPermission;\n",["252","253"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\Main.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\DeleteRole.jsx",["254"],"import { useEffect, useState } from \"react\";\nimport Modal from \"../HOC/Modal\";\nimport { _DeleteRole } from './../../../services/Person';\nimport { toast } from 'react-toastify';\nimport { remove } from \"lodash\";\nimport Table from './../Table';\n\nconst DeleteRole = ({ role_id, roles , update}) => {\n\n    const [new_role_id, setNew_role_id] = useState(null);\n    const [someRoles, setSomeRoles] = useState(false);\n\n    const roleColumens = (row, generateID) => {\n        return (\n            <>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.name}</th>\n                <th key={generateID()} scope=\"col\" className=\"text-center\">{row.role_id}</th>\n            </>\n        );\n    }\n\n    const footer = () => {\n        return (\n            <>\n                { someRoles === null || someRoles.length === 0 ? null :\n                    <div style={{ textAlign: \"center\", width: \"100%\" }}>\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={() => deleteRole()} style={{ margin: \"5px\" }}>حذف نقش</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">لغو</button>\n                    </div>\n                }\n            </>\n        );\n    }\n    const deleteRole = async () => {\n        if (new_role_id !== null) {\n            try {\n                const respons = await _DeleteRole({ role_id, new_role_id });\n                if (respons.data.statusText === \"ok\") {\n                    toast(respons.data.message);\n                    update();\n                }\n            } catch (error) { }\n        }\n    }\n\n    useEffect(() => {\n        setSomeRoles(remove([...roles], (n) => {\n            return n.role_id !== role_id;\n        }));\n    }, [role_id]);\n\n    return (\n        <Modal obj_id=\"Modal_DeleteRole\" close={true} footer={footer()} title=\"حذف نقش\">\n            <span style={{ marginBottom: \"10px\", display: \"block\" }}>انتخاب نقش جایگزین برای کاربرانی که این نقش رو دارند</span>\n            {(someRoles === null || someRoles.length === 0) && <div style={{ color: \"red\" }}>نقش دیگری وجود ندارد !</div>}\n            {(someRoles != null) ?\n                <Table titles={[\n                    \"id\",\n                    \"نام\",\n                ]} data={someRoles} select={true} selectedValue={someRoles[0]} selectLisener={(selectedData) => {\n                    if (selectedData != null) {\n                        setNew_role_id(selectedData.role_id);\n                    }\n                }} columens={roleColumens} />\n\n                : null}\n        </Modal>\n\n    );\n};\n\nexport default DeleteRole;\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\CreatePost.jsx",["255"],"import React, { useState, useRef, useEffect } from \"react\";\nimport JoditEditor from \"jodit-react\";\nimport { _createPost, _updatePost } from './../../services/Post';\nimport { toast } from 'react-toastify';\nimport { _categoryListPure } from \"../../services/Category\";\nimport useGenerator from \"../../global/Idgenerator\";\nimport { useSelector } from 'react-redux';\n\nconst CreatePost = ({ edit = false, data = null, onSubmit = null }) => {\n\n    const editor = useRef(null)\n    const [category_id, setCategory_id] = useState((edit) ? data.category_id : null);\n    const [categoryPure, setCategoryPure] = useState(null);\n    const [image, setImage] = useState((edit) ? data.image : '');\n    const [title, setTitle] = useState((edit) ? data.title : '');\n    const [description, setDescription] = useState((edit) ? data.description : '');\n    const [meta_keywords, setMeta_keywords] = useState((edit) ? data.meta_keywords : '');\n    const [generateID] = useGenerator();\n    const permission = useSelector(state => state.profile.permissions).includes('createPost_page');\n\n    const getCtegorysPure = async () => {\n        try {\n            const respons = await _categoryListPure();\n            if (respons.data.statusText === \"ok\") {\n                setCategoryPure(respons.data.list);\n                setCategory_id(respons.data.list[0].category_id);\n            }\n        } catch (error) { }\n    }\n    const createPost = async (status) => {\n        try {\n            const obj = {\n                post_id: (edit ? data.post_id : ''),\n                category_id,\n                image,\n                title,\n                body: editor.current.value,\n                description,\n                meta_keywords,\n                status\n            };\n            let respons = null;\n            if (edit) {\n                respons = await _updatePost(obj);\n            } else {\n                respons = await _createPost(obj);\n            }\n            if (respons.data.statusText === \"ok\") {\n                if (edit) {\n                    onSubmit();\n                    document.getElementById('Modal_EditPost_open').click();\n                } else {\n                    setCategory_id(categoryPure[0].category_id);\n                    setImage(\"\");\n                    setTitle(\"\");\n                    setDescription(\"\");\n                    setMeta_keywords(\"\");\n                }\n            }\n            toast(respons.data.message);\n        } catch (error) { }\n    }\n    useEffect(() => {\n        getCtegorysPure();\n        if (edit) {\n            setCategory_id((edit) ? data.category_id : null);\n            setCategoryPure(null);\n            setImage((edit) ? data.image : '');\n            setTitle((edit) ? data.title : '');\n            setDescription((edit) ? data.description : '');\n            setMeta_keywords((edit) ? data.meta_keywords : '');\n        }\n    }, [data]);\n\n    if (permission === false) {\n        return (\n            <div class=\"d-flex justify-content-center align-items-center\" style={{ height: \"100vh\" }}>\n                <div>شما به این قسمت دسترسی ندارید</div>\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <form onSubmit={createPost}>\n                    <div className=\"row m-2\">\n                        <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">دسته بندی</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <select className=\"form-control justify-content-center\" style={{ direction: \"rtl\" }} onChange={(e) => setCategory_id(e.target.value)}>\n                                        {categoryPure != null && categoryPure.map(element => <option key={generateID()} value={element.category_id}>{element.name}</option>)}\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12  mb-2\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">عکس ID</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <input className=\"form-control\" style={{ textAlign: \"right\" }} value={image} onChange={(e) => setImage(e.target.value)} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12  mb-2\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">عنوان</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <input className=\"form-control\" style={{ textAlign: \"right\" }} value={title} onChange={(e) => setTitle(e.target.value)} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-2\">\n                        <div className=\"col-12\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">توضیحات</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <input className=\"form-control\" style={{ textAlign: \"right\" }} value={description} onChange={(e) => setDescription(e.target.value)} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-2\">\n                        <div className=\"col-12\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">کلمات کلیدی</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <input className=\"form-control\" style={{ textAlign: \"right\" }} value={meta_keywords} onChange={(e) => setMeta_keywords(e.target.value)} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-2\">\n                        <div className=\"col-12\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                    <h6 className=\"font-weight-bold text-primary\">مطلب</h6>\n                                </div>\n                                <div className=\"card-body\" >\n                                    <JoditEditor\n                                        ref={editor}\n                                        value={edit ? data.body : \"\"}\n                                        config={{\n                                            readonly: false\n                                        }}\n                                        tabIndex={1} // tabIndex of textarea\n                                        onBlur={newContent => { }} // preferred to use only this option to update the content for performance reasons\n                                        onChange={newContent => { }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row m-2 justify-content-center\">\n                        {(edit === false) &&\n                            <>\n                                <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12  mb-2\">\n                                    <div className=\"card shadow\">\n                                        <div className=\"card-header\">\n                                        </div>\n                                        <div className=\"card-body\" >\n                                            <button type=\"button\" className=\"btn btn-danger\" style={{ width: \"100%\" }}>حذف</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12  mb-2\" >\n                                    <div className=\"card shadow\">\n                                        <div className=\"card-header\">\n                                        </div>\n                                        <div className=\"card-body\" >\n                                            <button type=\"button\" className=\"btn btn-warning\" disabled style={{ width: \"100%\" }} onClick={() => createPost(1)}>ثبت و انشار</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                        <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12  mb-2\">\n                            <div className=\"card shadow\">\n                                <div className=\"card-header\">\n                                </div>\n                                <div className=\"card-body\" >\n                                    <button type=\"button\" className=\"btn btn-success\" style={{ width: \"100%\" }} onClick={() => createPost(0)}>ثبت</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default CreatePost;\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\FileManager.jsx",["256"],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\FileManager.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\UploadFile.jsx",[],["257","258"],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\FileDetails.jsx",["259"],"import Modal from './../HOC/Modal';\nimport { _publicFileInformation } from '../../../services/FileManager'\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst FileDetails = ({ item }) => {\n\n    const [information, setInformation] = useState(null);\n\n    const publicFileInformation = async () => {\n        console.log(item);\n        if (item == null) { return; }\n        try {\n            const data = { name: item[0] };\n            const respons = await _publicFileInformation(data);\n            if (respons.data.statusText === \"ok\") {\n                setInformation(respons.data.file);\n            } else {\n                toast(respons.data.message);\n            }\n        } catch (error) { }\n    }\n    useEffect(() => {\n        if((item + \"\").includes('.')){\n            publicFileInformation();\n        }\n    }, [item]);\n\n    return (\n        <Modal obj_id=\"Modal_FileDetails\" close={true} footer={null} title=\"اطلاعات فایل\" size=\"80%\">\n            <div className=\"row justify-content-center\">\n                {(information != null) &&\n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-4 col-lg-4  col-md-12 col-sm-12 mb-2\" style={{ textAlign: \"left\", direction: \"rtl\" }}>\n                                <div>{information.orginal_name + \" : نام در زمان آپلود\"}</div>\n                                <div>{information.new_name + \" : نام فعلی\"}</div>\n                                <div>{information.created_at + \" : زمان آپلود\"}</div>\n                                <div id=\"image_size\"></div>\n                                <button type=\"button\" className=\"btn btn-info m-2\" onClick={() => {\n                                    navigator.clipboard.writeText(information.link).then(function () {\n                                        toast(\"لینک کپی شد\");\n                                    }, function (err) {\n                                        console.error('Async: Could not copy text: ', err);\n                                    });\n                                }} >Link</button>\n                                <button type=\"button\" className=\"btn btn-info m-2\" onClick={() => {\n                                    navigator.clipboard.writeText(information.file_id).then(function () {\n                                        toast(\"کپی شد id\");\n                                    }, function (err) {\n                                        console.error('Async: Could not copy text: ', err);\n                                    });\n                                }} >ID</button>\n                            </div>\n                            <div className=\"col-xl-8 col-lg-8  col-md-12 col-sm-12\" style={{ borderStyle: \"solid\" }}>\n                                <img id=\"file_image\" className=\"img-fluid\" src={information.link} alt=\"error\" onLoad={(e) => {\n                                    document.getElementById('image_size').innerHTML =\n                                        document.getElementById('file_image').naturalWidth +\n                                        'x' +\n                                        document.getElementById('file_image').naturalHeight +\n                                        \" : ابعاد\";\n                                    document.getElementById('image_size').style.direction = \"rtl\";\n                                    document.getElementById('image_size').style.textAlign = \"left\";\n                                }} />\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        </Modal>\n    );\n}\nexport default FileDetails;\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Category.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\Category.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\Post.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\ContentWrapper.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\RolePermissions.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\Dashboard.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\layouts\\partials\\ContentAndSidebar.jsx",["260"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setProfileData } from \"../../../actions/profile\";\nimport { _personProfile } from './../../../services/Person';\nimport ContentWrapper from '../partials/ContentWrapper';\nimport Sidebar from '../partials/Sidebar';\n\nconst ContentAndSidebar = () => {\n\n    const [show, setShow] = useState(false);\n    const dispatch = useDispatch();\n\n    const PersonProfile = async () => {\n        if (show === false) {\n            try {\n                const respons = await _personProfile();\n                console.log(respons);\n                if (respons.data.statusText === \"ok\") {\n                    dispatch(setProfileData(respons.data));\n                    setShow(true);\n                }\n            } catch (error) { }\n        }\n    }\n    useEffect(() => {\n        PersonProfile();\n    }, []);\n    if (show) {\n        return (\n            <>\n                <ContentWrapper />\n                <Sidebar />\n            </>\n        );\n    } else { return (<></>) }\n\n}\n\nexport default ContentAndSidebar;\n","E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\RelogIn.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\PostList.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\EditPost.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\components\\modals\\PermissionDenid.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\Key_Value.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\services\\IndexPage.jsx",[],"E:\\dev\\Web\\cms\\cms_react\\src\\views\\contents\\SiteIndex.jsx",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":55,"column":8,"nodeType":"267","endLine":55,"endColumn":10,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":12,"column":21,"nodeType":"271","endLine":13,"endColumn":91},{"ruleId":"269","severity":1,"message":"270","line":35,"column":21,"nodeType":"271","endLine":36,"endColumn":91},{"ruleId":"269","severity":1,"message":"270","line":47,"column":25,"nodeType":"271","endLine":47,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":59,"column":25,"nodeType":"271","endLine":59,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":70,"column":25,"nodeType":"271","endLine":70,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":81,"column":25,"nodeType":"271","endLine":81,"endColumn":95},{"ruleId":"269","severity":1,"message":"270","line":87,"column":21,"nodeType":"271","endLine":88,"endColumn":91},{"ruleId":"269","severity":1,"message":"270","line":99,"column":25,"nodeType":"271","endLine":99,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":110,"column":25,"nodeType":"271","endLine":110,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":121,"column":25,"nodeType":"271","endLine":121,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":132,"column":25,"nodeType":"271","endLine":132,"endColumn":89},{"ruleId":"269","severity":1,"message":"270","line":144,"column":25,"nodeType":"271","endLine":144,"endColumn":95},{"ruleId":"269","severity":1,"message":"270","line":152,"column":21,"nodeType":"271","endLine":153,"endColumn":91},{"ruleId":"272","severity":1,"message":"273","line":154,"column":25,"nodeType":"271","endLine":154,"endColumn":103},{"ruleId":"269","severity":1,"message":"270","line":160,"column":25,"nodeType":"271","endLine":160,"endColumn":63},{"ruleId":"269","severity":1,"message":"270","line":164,"column":25,"nodeType":"271","endLine":164,"endColumn":63},{"ruleId":"269","severity":1,"message":"270","line":168,"column":25,"nodeType":"271","endLine":168,"endColumn":63},{"ruleId":"269","severity":1,"message":"270","line":173,"column":25,"nodeType":"271","endLine":173,"endColumn":111},{"ruleId":"274","severity":1,"message":"275","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":14},{"ruleId":"261","replacedBy":"278"},{"ruleId":"263","replacedBy":"279"},{"ruleId":"261","replacedBy":"280"},{"ruleId":"263","replacedBy":"281"},{"ruleId":"261","replacedBy":"282"},{"ruleId":"263","replacedBy":"283"},{"ruleId":"269","severity":1,"message":"284","line":21,"column":25,"nodeType":"271","endLine":25,"endColumn":26},{"ruleId":"261","replacedBy":"285"},{"ruleId":"263","replacedBy":"286"},{"ruleId":"261","replacedBy":"287"},{"ruleId":"263","replacedBy":"288"},{"ruleId":"261","replacedBy":"289"},{"ruleId":"263","replacedBy":"290"},{"ruleId":"261","replacedBy":"291"},{"ruleId":"263","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":13,"column":9,"nodeType":"276","messageId":"295","endLine":13,"endColumn":13},{"ruleId":"274","severity":1,"message":"296","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":25},{"ruleId":"274","severity":1,"message":"297","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":33},{"ruleId":"274","severity":1,"message":"298","line":1,"column":35,"nodeType":"276","messageId":"277","endLine":1,"endColumn":43},{"ruleId":"299","severity":1,"message":"300","line":28,"column":40,"nodeType":"301","messageId":"302","endLine":28,"endColumn":42},{"ruleId":"303","severity":1,"message":"304","line":29,"column":29,"nodeType":"305","messageId":"306","endLine":29,"endColumn":31},{"ruleId":"265","severity":1,"message":"307","line":38,"column":8,"nodeType":"267","endLine":38,"endColumn":36,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":34,"column":1,"nodeType":"311","endLine":40,"endColumn":3},{"ruleId":"274","severity":1,"message":"312","line":4,"column":10,"nodeType":"276","messageId":"277","endLine":4,"endColumn":18},{"ruleId":"265","severity":1,"message":"313","line":57,"column":8,"nodeType":"267","endLine":57,"endColumn":31,"suggestions":"314"},{"ruleId":"261","replacedBy":"315"},{"ruleId":"263","replacedBy":"316"},{"ruleId":"265","severity":1,"message":"317","line":50,"column":8,"nodeType":"267","endLine":50,"endColumn":17,"suggestions":"318"},{"ruleId":"265","severity":1,"message":"319","line":73,"column":8,"nodeType":"267","endLine":73,"endColumn":14,"suggestions":"320"},{"ruleId":"265","severity":1,"message":"321","line":105,"column":8,"nodeType":"267","endLine":105,"endColumn":10,"suggestions":"322"},{"ruleId":"261","replacedBy":"323"},{"ruleId":"263","replacedBy":"324"},{"ruleId":"265","severity":1,"message":"325","line":27,"column":8,"nodeType":"267","endLine":27,"endColumn":14,"suggestions":"326"},{"ruleId":"265","severity":1,"message":"327","line":27,"column":8,"nodeType":"267","endLine":27,"endColumn":10,"suggestions":"328"},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["331"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'config' is defined but never used.","Identifier","unusedVar",["329"],["330"],["329"],["330"],["329"],["330"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["329"],["330"],["329"],["330"],["329"],["330"],["329"],["330"],"no-redeclare","'name' is already defined.","redeclared","'Fragment' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'pData', 'select', and 'selectLisener'. Either include them or remove the dependency array. If 'selectLisener' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["332"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setToken' is defined but never used.","React Hook useEffect has a missing dependency: 'generateID'. Either include it or remove the dependency array.",["333"],["329"],["330"],"React Hook useEffect has a missing dependency: 'roles'. Either include it or remove the dependency array. If 'setSomeRoles' needs the current value of 'roles', you can also switch to useReducer instead of useState and read 'roles' in the reducer.",["334"],"React Hook useEffect has a missing dependency: 'edit'. Either include it or remove the dependency array. If 'setCategory_id' needs the current value of 'edit', you can also switch to useReducer instead of useState and read 'edit' in the reducer.",["335"],"React Hook useEffect has a missing dependency: 'currentPath'. Either include it or remove the dependency array.",["336"],["329"],["330"],"React Hook useEffect has a missing dependency: 'publicFileInformation'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has a missing dependency: 'PersonProfile'. Either include it or remove the dependency array.",["338"],"no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [history]",{"range":"355","text":"356"},"Update the dependencies array to be: [selectedValue, clearSelect, select, pData, selectLisener]",{"range":"357","text":"358"},"Update the dependencies array to be: [generateID, selectedRole, update]",{"range":"359","text":"360"},"Update the dependencies array to be: [role_id, roles]",{"range":"361","text":"362"},"Update the dependencies array to be: [data, edit]",{"range":"363","text":"364"},"Update the dependencies array to be: [currentPath]",{"range":"365","text":"366"},"Update the dependencies array to be: [item, publicFileInformation]",{"range":"367","text":"368"},"Update the dependencies array to be: [PersonProfile]",{"range":"369","text":"370"},[2011,2013],"[history]",[1072,1100],"[selectedValue, clearSelect, select, pData, selectLisener]",[2221,2244],"[generateID, selectedRole, update]",[1772,1781],"[role_id, roles]",[2874,2880],"[data, edit]",[3883,3885],"[currentPath]",[856,862],"[item, publicFileInformation]",[886,888],"[PersonProfile]"]